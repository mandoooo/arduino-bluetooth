#include <SoftwareSerial.h>
 
#define rxPin 2
#define txPin 3

SoftwareSerial SwSerial(txPin, rxPin);
char data;

void setup() {
  Serial.begin(9600);
  SwSerial.begin(9600);
  Serial.println("Ready..");
}


int pin = 8;
unsigned long duration;
unsigned long starttime;
unsigned long sampletime_ms = 30000;//sampe 30s ;
unsigned long lowpulseoccupancy = 0;

float pcsPerCF = 0;
float ugm3 = 0;
float ratio = 0;
float concentration = 0;

#include <math.h>
int a;
float temperature;
int B = 3975;                //B value of the thermistor
float resistance;

int ad_conv(byte channel, byte num);
int calc_RH10(int adval);




void loop() {
  {

    
    duration = pulseIn(pin, LOW);
    lowpulseoccupancy = lowpulseoccupancy + duration;

    if ((millis() - starttime) > sampletime_ms) //if the sampel time == 30s
    {
      ratio = lowpulseoccupancy / (sampletime_ms * 10.0); // Integer percentage 0=>100
      concentration = 1.1 * pow(ratio, 3) - 3.8 * pow(ratio, 2) + 520 * ratio + 0.62; // using spec sheet curve
      pcsPerCF = concentration * 100;
      ugm3 = pcsPerCF / 13000;
      Serial.print("   ");
      Serial.print(ugm3);
      lowpulseoccupancy = 0;

      a = analogRead(A1);
      resistance = (float)(1023 - a) * 10000 / a; //get the resistance of the sensor;
      temperature = 1 / (log(resistance / 10000) / B + 1 / 298.15) - 273.15; //convert to temperature via datasheet ;
      Serial.print("                 ");
      Serial.print(temperature);
      Serial.print("           ");

      int adval, RH10;
      adval = ad_conv(0, 32); // 32 samples on Channel 0
      RH10 = calc_RH10(adval);
      display(RH10);
      Serial.println("");
      starttime = millis();
    }
  }
}



int ad_conv(byte channel, byte num)
{
  long sum = 0;
  byte n;

  for (n = 0; n < num; n++)
  {
    sum = sum + analogRead(channel);
  }
  return (sum / num);
}


int calc_RH10(int adval)
{
  int RH10;
  RH10 = adval + 6 * adval / 10 + 3 * adval / 100; // 1.63 * adval
  return (RH10);
}


void display(int x)
{
  int whole, fract;

  whole = x / 10;
  fract = x % 10;

  Serial.print(whole, DEC);
  Serial.print(".");
  Serial.print(fract, DEC);

}

